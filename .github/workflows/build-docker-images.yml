name: Docker Image CI

on:
  workflow_dispatch:
    inputs:
      imageTag:
        description: 'UAT Image Tag to deploy'
        required: true
        default: 'warning'
      waitForService:
        description: 'Wait for cluster to finish deployment?'
        required: true
        default: 'true'
        type: boolean
jobs:
  
  build:
    runs-on: ubuntu-latest
    environment: UAT
    steps:   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID2 }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY2 }}
        aws-region: us-east-1
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
        
    - name: Build, tag, and push image to Amazon ECR
      id: debeers-build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: debeers-fyf-registry
        IMAGE_TAG: ${{ github.run_id }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t fyfsystemimage:latest -f system-image.dockerfile .
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f distribution-image.dockerfile .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

  deploy:
    runs-on: ubuntu-latest
    environment: UAT
    steps:
      - name: Tarea de Deploy
        id: this-is-my-id
        run: |
          #This is a sample 
          echo "This is a test message"
